<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.davidmoten.xuml-compiler</groupId>
        <artifactId>xuml-compiler-parent</artifactId>
        <version>0.5.2-SNAPSHOT</version>
    </parent>
    <artifactId>xuml-compiler</artifactId>
    <name>xuml-compiler</name>
    <description>Java model compiler based on "Executable UML"
	</description>
    <properties>
        <generated.test.sources>${project.build.directory}/generated-test-sources</generated.test.sources>
        <generated>${project.build.directory}/generated-sources</generated>
        <generated.bookstore>${generated.test.sources}/bookstore</generated.bookstore>
        <generated.associations>${generated.test.sources}/associations</generated.associations>
        <generated.microwave>${generated.test.sources}/microwave</generated.microwave>
        <generated.shop>${generated.test.sources}/shop</generated.shop>
        <generated.simple>${generated.test.sources}/simple</generated.simple>
        <generated.tv>${generated.test.sources}/tv</generated.tv>
        <generated.specialize>${generated.test.sources}/specialize</generated.specialize>
        <generated.self>${generated.test.sources}/self</generated.self>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.31</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.14.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>5.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.10.12</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.davidmoten.xuml-compiler</groupId>
            <artifactId>xuml-jpa</artifactId>
            <version>${project.parent.version}</version>
            <type>pom</type>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.davidmoten.xuml-compiler</groupId>
            <artifactId>xuml-metamodel</artifactId>
            <version>${project.parent.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="starting ant task" />
                                <!--  include the test classpath to enable cobertura -->
                                <taskdef name="xuml-generate" classname="moten.david.xuml.model.compiler.ant.GenerateTask" classpathref="maven.compile.classpath">
                                    <classpath refid="maven.test.classpath" />
                                    <!-- include the resources to pick up logging.properties -->
                                    <classpath path="${basedir}/src/test/resources" />
                                </taskdef>

                                <mkdir dir="${generated}" />

                                <property name="generated.bookstore" value="${generated}/bookstore" />
                                <property name="generated.associations" value="${generated}/associations" />
                                <property name="generated.microwave" value="${generated}/microwave" />
                                <property name="generated.shop" value="${generated}/shop" />
                                <property name="generated.simple" value="${generated}/simple" />
                                <property name="generated.tv" value="${generated}/tv" />
                                <property name="generated.specialize" value="${generated}/specialize" />
                                <property name="generated.self" value="${generated}/self" />
                                <echo message="calling xuml-generate" />
                                <xuml-generate outputDirectory="${generated.bookstore}" codeGenerator="moten.david.xuml.model.example.mellor.Bookstore" />
                                <xuml-generate outputDirectory="${generated.associations}" codeGenerator="moten.david.xuml.model.example.associations.Associations" />
                                <xuml-generate outputDirectory="${generated.microwave}" codeGenerator="moten.david.xuml.model.example.microwave.Microwave" />
                                <xuml-generate outputDirectory="${generated.shop}" codeGenerator="moten.david.xuml.model.example.shop.Shop" />
                                <xuml-generate outputDirectory="${generated.simple}" codeGenerator="moten.david.xuml.model.example.simple.Simple" />
                                <xuml-generate outputDirectory="${generated.tv}" codeGenerator="moten.david.xuml.model.example.tv.Tv" />
                                <xuml-generate outputDirectory="${generated.specialize}" codeGenerator="moten.david.xuml.model.example.specialize.Specialize" />
                                <xuml-generate outputDirectory="${generated.self}" codeGenerator="moten.david.xuml.model.example.self.Self" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.bookstore}</source>
                                <source>${generated.associations}</source>
                                <source>${generated.microwave}</source>
                                <source>${generated.shop}</source>
                                <source>${generated.simple}</source>
                                <source>${generated.tv}</source>
                                <source>${generated.specialize}</source>
                                <source>${generated.self}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/src/viewer/model/generated</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
