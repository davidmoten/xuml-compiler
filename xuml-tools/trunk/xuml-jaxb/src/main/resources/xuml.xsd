<schema targetNamespace="http://david.moten.org/xuml" xmlns:t="http://david.moten.org/xuml"
	xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<element name="system" type="t:system" />

	<complexType name="system">
		<sequence>
			<element name="class" type="t:class" minOccurs="0" maxOccurs="unbounded" />
			<element name="relationship" type="t:relationship" minOccurs="0"
				maxOccurs="unbounded" />
			<element name="generalization" type="t:generalization"
				minOccurs="0" maxOccurs="unbounded" />
		</sequence>
	</complexType>

	<complexType name="class">
		<complexContent>
			<extension base="t:classWithDomain">
				<sequence>
					<element ref="t:attributeBase" maxOccurs="unbounded" />
					<element name="operation" type="t:operation" maxOccurs="unbounded"
						minOccurs="0" />
					<element name="state" type="t:state" maxOccurs="unbounded"
						minOccurs="0" />
					<element name="event" type="t:event" maxOccurs="unbounded"
						minOccurs="0" />
					<element name="transition" type="t:transition" maxOccurs="unbounded"
						minOccurs="0" />
				</sequence>
				<attribute name="relationship" type="t:positiveInteger">
					<annotation>
						<documentation>If this is present then the class is an Association
							Class
						</documentation>
					</annotation>
				</attribute>
			</extension>
		</complexContent>
	</complexType>

	<element name="attributeBase" type="t:attribute" />
	<element name="attribute" substitutionGroup="t:attributeBase"
		type="t:independentAttribute" />
	<element name="derivedAttribute" substitutionGroup="t:attributeBase"
		type="t:derivedAttribute" />

	<element name="referentialAttribute" substitutionGroup="t:attributeBase"
		type="t:referentialAttribute" />

	<complexType name="attribute">
		<sequence>
			<element name="identifier" type="t:identifier" minOccurs="0"
				maxOccurs="unbounded" />
		</sequence>
		<attribute name="name" type="t:nonBlankString" use="required" />
	</complexType>

	<complexType name="identifier">
		<attribute name="number" type="t:positiveInteger" />
	</complexType>

	<complexType name="independentAttribute">
		<complexContent>
			<extension base="t:attribute">
				<attribute name="type" type="t:independentAttributeType"
					use="required" />
				<attribute name="mandatory" type="boolean" use="optional"
					default="true" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="derivedAttribute">
		<complexContent>
			<extension base="t:attribute">
				<attribute name="type" type="t:independentAttributeType"
					use="required" />
				<attribute name="formula" type="t:nonBlankString" />
			</extension>
		</complexContent>
	</complexType>

	<simpleType name="independentAttributeType">
		<restriction base="string">
			<enumeration value="Decimal" />
			<enumeration value="Integer" />
			<enumeration value="Boolean" />
			<enumeration value="Timestamp" />
			<enumeration value="Date" />
			<enumeration value="String" />
			<enumeration value="ArbitraryId" />
		</restriction>
	</simpleType>

	<complexType name="referentialAttribute">
		<complexContent>
			<extension base="t:attribute">
				<attribute name="otherName" type="t:nonBlankString" use="optional" />
				<attribute name="relationship" type="t:positiveInteger"
					use="required" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="operation">
		<sequence>
			<element name="parameter" type="t:parameter" minOccurs="0"
				maxOccurs="unbounded" />
		</sequence>
		<attribute name="name" type="t:nonBlankString" use="required" />
		<attribute name="returns" type="t:nonBlankString" use="optional" />
	</complexType>

	<complexType name="event">
		<sequence>
			<element name="parameter" type="t:parameter" minOccurs="0"
				maxOccurs="unbounded" />
		</sequence>
		<attribute name="name" type="t:nonBlankString" use="required" />
	</complexType>

	<complexType name="state">
		<sequence>
			<element name="onEntry" type="t:onEvent" minOccurs="0" />
		</sequence>
		<attribute name="name" type="t:nonBlankString" use="required" />
		<attribute name="number" type="t:positiveInteger" use="required" />
	</complexType>

	<complexType name="onEvent">
		<sequence>
			<element name="action" type="t:action" minOccurs="0" />
		</sequence>
		<attribute name="event" type="t:nonBlankString" />
	</complexType>

	<simpleType name="action">
		<restriction base="string">
			<whiteSpace value="preserve" />
		</restriction>
	</simpleType>

	<complexType name="transition">
		<attribute name="from" type="t:nonBlankString" use="required" />
		<attribute name="to" type="t:nonBlankString" use="required" />
		<attribute name="event" type="t:nonBlankString" use="required" />
	</complexType>

	<complexType name="parameter">
		<attribute name="name" type="t:nonBlankString" use="required" />
		<attribute name="type" type="t:nonBlankString" use="required" />
	</complexType>

	<complexType name="relationship">
		<sequence>
			<element name="class1" type="t:relationshipEnd" />
			<element name="class2" type="t:relationshipEnd" />
		</sequence>
		<attribute name="number" type="t:positiveInteger" use="required" />
	</complexType>

	<complexType name="relationshipEnd">
		<complexContent>
			<extension base="t:classWithDomain">
				<attribute name="verbClause" type="t:nonBlankString" use="required" />
				<attribute name="multiplicity" type="t:multiplicity" use="required" />
			</extension>
		</complexContent>
	</complexType>

	<simpleType name="multiplicity">
		<restriction base="string">
			<enumeration value="ZERO_ONE" />
			<enumeration value="ONE" />
			<enumeration value="MANY" />
			<enumeration value="ONE_MANY" />
		</restriction>
	</simpleType>

	<complexType name="generalization">
		<sequence>
			<element name="superClass" type="t:classWithDomain" />
			<element name="class" type="t:classWithDomain" maxOccurs="unbounded" />
		</sequence>
		<attribute name="number" type="t:positiveInteger" use="required" />
	</complexType>

	<complexType name="classWithDomain">
		<attribute name="name" type="t:nonBlankString" use="required" />
		<attribute name="domain" type="t:nonBlankString" use="required" />
	</complexType>

	<simpleType name="nonBlankString">
		<restriction base="string">
			<pattern value=".*[^\s].*" />
		</restriction>
	</simpleType>

	<simpleType name="positiveInteger">
		<restriction base="integer">
			<minInclusive value="0" />
		</restriction>
	</simpleType>

</schema>